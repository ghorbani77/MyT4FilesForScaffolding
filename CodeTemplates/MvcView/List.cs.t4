<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
<#@ import namespace="System.Linq" #>

<#
string MyViewDataTypeName=ViewDataTypeName.Substring(ViewDataTypeName.LastIndexOf(".")+1);
	if(MyViewDataTypeName.EndsWith("DataGridViewModel"))
    {
		MyViewDataTypeName=MyViewDataTypeName.Substring(0,MyViewDataTypeName.IndexOf("DataGridViewModel"));
    }
string jobfaAreaName="";
if(LayoutPageFile.ToLower().Contains("~/areas/"))
jobfaAreaName=LayoutPageFile.Substring(8,LayoutPageFile.IndexOf("/",8)-8);

string pkName = GetPrimaryKeyName();
 
	
if(IsPartialView) {
#>

<#
}
 else 
 if(IsLayoutPageSelected) 
 {
	#>
@{
	ViewBag.Title = string.Format(AdakCMS5.Resource.Text.ListTitle, AdakCMS5.Resource.Text.<#= MyViewDataTypeName #>s);	
	<#
	if (!String.IsNullOrEmpty(LayoutPageFile)) 
		{
		#>
			Layout = "<#= LayoutPageFile#>";
		<#
		}
		#>
  }
<#
}
	#>


<div dir="rtl" align="center">
	<div id="rsperror1"></div>
	<table id="list1" cellpadding="0" cellspacing="0"></table>
	<div id="pager1" style="text-align:center;"></div>
	<div class="text-left">
		<div class="ActionContainer1">
			@using (Html.BeginForm())
			{             
				   @Html.Hidden("SelectedRowID", ",")
				@Html.DropDownList("action", new List<SelectListItem>{
										new SelectListItem { Value = "Null",Text = AdakCMS5.Resource.Text.PleaseSelect },                                        
										new SelectListItem { Value = "Delete", Text=AdakCMS5.Resource.Text.Delete }}, new { @class = "ActionSelector" })
				<input type="submit" value="@AdakCMS5.Resource.Text.Execute" class="btn btn-default GoButton" />
			}
		</div>	
	</div>
</div>




@section Scripts
{
	<script type="text/javascript">
		var searchOptions = ['eq', 'ne', 'lt', 'le', 'gt', 'ge', 'bw', 'bn', 'in', 'ni', 'ew', 'en', 'cn', 'nc'];
		$(document).ready(function () {
			$(".GoButton").prop('disabled', true);
			$('#list1').jqGrid({

				mtype: 'GET',
				caption: "@string.Format(AdakCMS5.Resource.Text.ListTitle, AdakCMS5.Resource.Text.<#= MyViewDataTypeName #>s) <div style='float:left'><a class='k-state-default btn costumizedTabForInsertion' href='/<#= jobfaAreaName #>/<#= MyViewDataTypeName #>/Create'><i class='fa fa-plus' ></i> ثبت یک @(AdakCMS5.Resource.Text.<#= MyViewDataTypeName #>) جدید</a></div>",
				//url from wich data should be requested
				url: '@Url.Action("Read<#= MyViewDataTypeName #>", "<#= MyViewDataTypeName #>", new { area = "<#= jobfaAreaName #>" })',
				//type of data
				datatype: 'json',
				jsonReader: {
					root: "Rows",
					page: "Page",
					total: "Total",
					records: "Records",
					repeatitems: true,
					userdata: "UserData",
					id: "Id",
					cell: "RowCells"
				},
				//columns names
				<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
	List<string> colNames=new List<string>();
	List<string> colModel=new List<string>();
foreach (PropertyMetadata property in properties) 
{	
 if(!GetValueExpression(property).Contains("."))
		{
			string fName=GetAssociationName(property);
			colNames.Add(GetAssociationName(property));
			string ssd="{name:'"+fName+"', index: '"+fName+"', width: 50";
			if ( property.IsPrimaryKey ) 
			{
				ssd+=", align: 'left', sorttype: 'number',key: true ,stype: 'text'";
			}
			else if(IsPropertyDateTime(property))
			{
				ssd+=", align: 'left', sorttype: 'date' ";
			}  else if(GetAssociationName(property).Contains("PictureId"))
			{
				ssd+=",formatter: function (cellvalue, options, rowObject) { return \"<img src='/content/upload/images/120.90/\"+ cellvalue +\".thumb' />\";} ";
			}
			else if(IsPropertyNumber(property)&&(!GetValueExpression(property).EndsWith("ShowOrder")))
			{
				ssd+=", align: 'left', sorttype: 'date' ";
			}
			else
				if(GetValueExpression(property).EndsWith("ShowOrder"))
			{
				ssd+=", align: 'center',formatter: function (cellvalue, options, rowObject) { return \"<a class='btn btn-default' title='رتبه بالاتر' href='#' onclick='changeorder(\"+ rowObject[0]+\" ,false);'><i class='fa fa-chevron-circle-up fa-lg'></i></a><br>\" + cellvalue + \"<br><a class='btn btn-default' title='رتبه پائین تر' href='\\#' onclick='changeorder(\"+ rowObject[0]+\",true);'><i class='fa fa-chevron-circle-down fa-lg'></i></a>\";}";
			}
			else
			{
				ssd+=", align: 'right', sorttype: 'text' ";
			}
			ssd+="}";
			colModel.Add(ssd);
		}
}
#>
colNames: [
<# 
bool First=true;
	foreach(string sdd in colNames){
		if(!First){
#>

				,'<#=                sdd #>'
	<#        }
 else 
{ 
	First=false;  
#>
'<#=                sdd #>'

 <#        }} #>
				,''],
				colModel: [
<# 
	First=true;
	foreach(string sdd in colModel){
		if(!First){
#>

				,<#=                sdd #>
	<#        }
 else 
{ 
	First=false;  
#>
<#=                sdd #>

 <#        }} #>

			   
				,
				{
					name: 'Id', index: 'Id', align: 'center', width: 80,

					formatter: function (cellvalue, options, rowObject) {
						return "<a href='/<#= jobfaAreaName #>/<#= MyViewDataTypeName #>/edit/" + cellvalue + "' title='ویرایش'><i class='fa fa-2x fa-edit'> </i></a> <a title='حذف' href='#' onclick='Delete(" + cellvalue + ");'><i class='fa fa-trash-o fa-2x'></i></a>";
					}
				}],

				pager: $('#pager1'),
				
				rowNum: 10,
				rowList: [10, 30, 50, 200],

				sortname: 'Id',

				sortorder: 'asc',

				viewrecords: true,
				altRows: true,
				shrinkToFit: true,
				autowidth: true,
				height: 'auto',
				hidegrid: false,
				direction: "rtl",
				gridview: true,
				multiselect: true,
				rownumbers: true,
				footerrow: false,
				userDataOnFooter: true,
				loadComplete: function () {

					$("tr.jqgrow:odd").css("background", "#E0E0E0");
				},
				loadError: function (xhr, st, err) {
					jQuery("#rsperror").html("Type: " + st + "; Response: " + xhr.status + " " + xhr.statusText);
				}

			})
			 .jqGrid('navGrid', '#pager1',
				{ add: false, edit: false, del: false },
				{
					// search options
					multipleSearch: true,
					closeOnEscape: true,
					closeAfterSearch: true,
					ignoreCase: true
				})
			 
			 .jqGrid('navButtonAdd', '#pager1',
			{
				caption: "تنظیم نمایش ستون‌ها", title: "Reorder Columns",
				onClickButton: function () {
					jQuery("#list1").jqGrid('columnChooser');
				}
			}).jqGrid('navButtonAdd', '#pager1', {
				caption: "", buttonicon: "ui-icon-print", title: "خروجی پی دی اف",
				onClickButton: function () {
					$("#list1").jqGrid('excelExport', { url: '@Url.Action("Read<#= MyViewDataTypeName #>", "Atcions")' });
				}
			});
		});

		function toolbarSearching() {
			$('#list1').filterToolbar({
				groupOp: 'OR',
				defaultSearch: "cn",
				autosearch: true,
				searchOnEnter: true,
				searchOperators: true, // فعال سازی منوی اپراتورها
				stringResult: true // وجود این سطر سبب می‌شود تا اپراتورها به سرور ارسال شوند
			});
		};

		function singleSearching() {
			$('#list1').searchGrid({
				closeAfterSearch: true
			});
		};

		function advancedSearching() {
			$('#list1').searchGrid({
				multipleSearch: true,
				closeAfterSearch: true
			});
		};

	  
		function Delete(I) {
			if (confirm("@AdakCMS5.Resource.Text.AreYouSureDelete") == true) {
				$(".PlzWait").removeClass("notShow"); $.ajax({
					type: 'POST',
					url: '@Url.Action("JDelete")',

					dataType: 'json',
					data: { id: I },
					complete: function (data) { $(".PlzWait").addClass("notShow"); }, success: function (cit) {
						
						$(".PlzWait").removeClass("notShow");
						$('#list1').trigger('reloadGrid');
					},
					error: function (ex) {
						alert("@AdakCMS5.Resource.Text.DeleteFailed" + ex);
					}
				});
			}
		}
		function changeorder(I, f) {
		 $(".PlzWait").removeClass("notShow");
        $.ajax({
            type: 'POST',
            url: '@Url.Action("jChangeOrder")',

            dataType: 'json',

            data: { id: I, top: f },

			 complete: function (data) {
			  $(".PlzWait").addClass("notShow"); 
			  },
            success: function (cit) {
				$('#list1').trigger('reloadGrid');
            },
            error: function (ex) {
                alert("@AdakCMS5.Resource.Text.ChangeOrderFailed" + ex);
            }
        });

    }
		$(".ActionSelector").change(function () {

			var grid = $("#list1");
			var rowKey = grid.getGridParam("selrow");

			if (!rowKey) {				
				 $(".GoButton").prop('disabled', true);
                if ($(".ActionSelector option:selected").index() > 0) {
					 alert('@string.Format(AdakCMS5.Resource.Text.NoRecordSelected, AdakCMS5.Resource.Text.<#= MyViewDataTypeName #>)');
                }
                return;

			}
			else {
				var selectedIDs = grid.getGridParam("selarrrow");
				var result = "";
				for (var i = 0; i < selectedIDs.length; i++) {
					result += selectedIDs[i] + ",";
				}
				$("#SelectedRowID").val(result);
				if ($(".ActionSelector option:selected").index() > 0) {
					$(".GoButton").prop('disabled', false);
				} else
					$(".GoButton").prop('disabled', true);
			}
		});
	</script>
}




<#@ include file="ModelMetadataFunctions.cs.include.t4" #>